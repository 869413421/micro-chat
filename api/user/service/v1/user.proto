syntax = "proto3";

package api.user.v1;

option go_package = "github.com/869413421/micro-chat/api/user/server/v1;v1";

// User 服务
service User {
  rpc CreateUser (CreateUserRequest) returns (UserInfoResponse);
  rpc UpdateUser (UpdateUserRequest) returns (UserInfoResponse);
  rpc DeleteUser (DeleteUserRequest) returns (UserInfoResponse);
  rpc GetUser (GetUserRequest) returns (UserInfoResponse);
  rpc ListUser (ListUserRequest) returns (ListUserResponse);

  rpc CreateRole (CreateRoleRequest) returns (RoleInfoResponse);
  rpc UpdateRole (UpdateRoleRequest) returns (RoleInfoResponse);
  rpc DeleteRole (DeleteRoleRequest) returns (RoleInfoResponse);
  rpc GetRole (GetRoleRequest) returns (RoleInfoResponse);
  rpc ListRole (ListRoleRequest) returns (ListRoleResponse);
}

// Role 角色信息
message RoleInfoResponse {
  uint64 id = 1;
  string name = 2;
  string memo = 3;
}

// CreateRoleRequest 创建角色请求
message CreateRoleRequest {
  string name = 1;
  string memo = 2;
}

// UpdateRoleRequest 更新角色请求
message UpdateRoleRequest {
  uint64 id = 1;
  string name = 2;
  string memo = 3;
}

// DeleteRoleRequest 删除角色请求
message DeleteRoleRequest {
  uint64 id = 1;
}

// GetRoleRequest 获取角色请求
message GetRoleRequest {
  uint64 id = 1;
}

// ListRoleRequest 获取角色列表请求
message ListRoleRequest {
  uint64 offset = 1;
  uint64 limit = 2;
}

// ListRoleResponse 获取角色列表响应
message ListRoleResponse {
  repeated RoleInfoResponse roles = 1;
  uint64 total = 2;
}

// UserInfoResponse 用户信息
message UserInfoResponse {
  uint64 id = 1;
  string email = 2;
  string name = 3;
  string password = 4;
  string created_at = 5;
  string updated_at = 6;
}

// CreateUserRequest 创建用户请求
message CreateUserRequest {
  string name = 1;
  string password = 2;
  string email = 3;
}

// UpdateUserRequest 更新用户请求
message UpdateUserRequest {
  uint64 id = 1;
  string name = 2;
  string password = 3;
  string email = 4;
}

// DeleteUserRequest 删除用户请求
message DeleteUserRequest {
  uint64 id = 1;
}

// GetUserRequest 获取用户请求
message GetUserRequest {
  uint64 id = 1;
}

// ListUserRequest 获取用户列表请求
message ListUserRequest {
  int64 page = 1;
  int64 pageSize = 2;
}

// ListUserReply 获取用户列表响应
message ListUserResponse {
  repeated UserInfoResponse users = 1;
  int64 total = 2;
}